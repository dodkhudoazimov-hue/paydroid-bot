import telebot
import os
import subprocess
import requests
import yt_dlp
import tempfile

BOT_TOKEN = "8238563485:AAHNLTZodPeXcl7YfjZqIqY6BpcPuP3QGXs"
AUDD_API_TOKEN = "67bb96ec3f8a31cf3b9a73a4279fbb99"

bot = telebot.TeleBot(BOT_TOKEN)

@bot.message_handler(commands=['start', 'help'])
def start(message):
    bot.reply_to(
        message,
        "üéµ –°–∞–ª–æ–º! –ú–∞–Ω –º—É—Å–∏“õ–∏—Ä–æ –∞–∑ –æ–≤–æ–∑, –≤–∏–¥–µ–æ —ë –ª–∏–Ω–∫“≥–æ –º–µ—à–∏–Ω–æ—Å–∞–º.\n"
        "–§–∞“õ–∞—Ç –æ–≤–æ–∑ —ë –ª–∏–Ω–∫–∏ TikTok / Instagram / YouTube —Ñ–∏—Ä–∏—Å—Ç–µ–¥ üéß"
    )

def recognize_music(file_path):
    with open(file_path, 'rb') as f:
        r = requests.post(
            'https://api.audd.io/',
            data={'api_token': AUDD_API_TOKEN, 'return': 'apple_music,spotify,lyrics'},
            files={'file': f}
        )
    data = r.json()
    if data.get('status') != 'success' or not data.get('result'):
        return None
    result = data['result']
    txt = f"üéµ <b>{result.get('title','?')}</b> ‚Äî {result.get('artist','?')}"
    if result.get('album'):
        txt += f"\nüíø –ê–ª—å–±–æ–º: {result['album']}"
    if result.get('release_date'):
        txt += f"\nüìÖ –°–∞–Ω–∞: {result['release_date']}"
    if result.get('spotify') and result['spotify'].get('external_urls'):
        txt += f"\nüéß Spotify: {result['spotify']['external_urls'].get('spotify')}"
    if result.get('apple_music') and result['apple_music'].get('url'):
        txt += f"\nüçé Apple Music: {result['apple_music']['url']}"
    if result.get('lyrics') and result['lyrics'].get('lyrics'):
        lyr = result['lyrics']['lyrics'][:400]
        txt += f"\nüìù Lyrics:\n{lyr}..."
    return txt

def download_audio_from_url(url):
    tmpdir = tempfile.mkdtemp()
    opts = {
        'format': 'bestaudio/best',
        'outtmpl': os.path.join(tmpdir, 'media.%(ext)s'),
        'quiet': True,
    }
    filename = None
    try:
        with yt_dlp.YoutubeDL(opts) as ydl:
            info = ydl.extract_info(url, download=True)
            filename = ydl.prepare_filename(info)
    except Exception as e:
        print("yt-dlp error:", e)
        return None

    if not filename or not os.path.exists(filename):
        return None

    wav_path = os.path.join(tmpdir, 'audio.wav')
    try:
        subprocess.run(
            ['ffmpeg', '-y', '-i', filename, '-ar', '44100', '-ac', '1', wav_path],
            stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL
        )
    except Exception as e:
        print("ffmpeg error:", e)
        return None

    return wav_path if os.path.exists(wav_path) else None

@bot.message_handler(func=lambda msg: 'http' in msg.text)
def handle_link(message):
    url = message.text.strip()
    msg = bot.reply_to(message, "üîé –õ–∏–Ω–∫ —ë—Ñ—Ç —à—É–¥, –∑–µ—Ä–∫–∞—à”£ –≤–∞ —Ç–∞“≥–ª–∏–ª –º–µ—à–∞–≤–∞–¥...")
    audio_path = download_audio_from_url(url)
    if not audio_path:
        bot.send_message(message.chat.id, "‚ùå –ù–∞—Ç–∞–≤–æ–Ω–∏—Å—Ç–∞–º –∞—É–¥–∏–æ—Ä–æ –∞–∑ –ª–∏–Ω–∫ –≥–∏—Ä–∞–º.")
        return
    result = recognize_music(audio_path)
    if result:
        bot.send_message(message.chat.id, result, parse_mode='HTML')
    else:
        bot.send_message(message.chat.id, "‚ùå –ú—É—Å–∏“õ”£ —ë—Ñ—Ç –Ω–∞—à—É–¥.")

@bot.message_handler(content_types=['voice', 'audio'])
def handle_voice(message):
    file_info = bot.get_file(message.voice.file_id if message.voice else message.audio.file_id)
    downloaded = bot.download_file(file_info.file_path)
    tmpdir = tempfile.mkdtemp()
    ogg_path = os.path.join(tmpdir, 'voice.ogg')
    with open(ogg_path, 'wb') as f:
        f.write(downloaded)
    wav_path = os.path.join(tmpdir, 'voice.wav')
    subprocess.run(['ffmpeg', '-y', '-i', ogg_path, '-ar', '44100', '-ac', '1', wav_path],
                   stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
    bot.reply_to(message, "üéß –®–∏–Ω–æ—Ö—Ç–∏ –º—É—Å–∏“õ”£ –æ“ì–æ–∑ —ë—Ñ—Ç, –ª—É—Ç—Ñ–∞–Ω –∏–Ω—Ç–∏–∑–æ—Ä —à–∞–≤–µ–¥...")
    result = recognize_music(wav_path)
    if result:
        bot.send_message(message.chat.id, result, parse_mode='HTML')
    else:
        bot.send_message(message.chat.id, "‚ùå –ú—É—Å–∏“õ”£ —ë—Ñ—Ç –Ω–∞—à—É–¥.")

print("‚úÖ –ë–æ—Ç —Ñ–∞—ä–æ–ª —à—É–¥...")
bot.infinity_polling()
