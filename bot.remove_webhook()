import telebot
import os
import subprocess
import requests
import yt_dlp
import tempfile

# >>>>>> –¢–£ –î–ê–† –ò–ù “∂–û TOKEN-–ò –•–£–î–†–û –ì–£–ó–û–† <<<<<<
BOT_TOKEN = "8238563485:AAHNLTZodPeXcl7YfjZqIqY6BpcPuP3QGXs"
AUDD_API_TOKEN = "67bb96ec3f8a31cf3b9a73a4279fbb99"

bot = telebot.TeleBot(BOT_TOKEN)

# /start –∫–æ–º–∞–Ω–¥–∞
@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    bot.reply_to(
        message,
        "üéµ –°–∞–ª–æ–º! –ú–∞–Ω –º—É—Å–∏“õ–∏—Ä–æ –∞–∑ –æ–≤–æ–∑, –≤–∏–¥–µ–æ —ë –ª–∏–Ω–∫“≥–æ –º–µ—à–∏–Ω–æ—Å–∞–º.\n"
        "–§–∞“õ–∞—Ç –æ–≤–æ–∑ —ë –ª–∏–Ω–∫–∏ TikTok / Instagram / YouTube —Ñ–∏—Ä–∏—Å—Ç–µ–¥ üéß"
    )

# === –§–£–ù–ö–°–ò–Ø–ò –Å–†–î–ê–ú”¢: –±–∞ AudD –º–µ—Ñ–∏—Ä–∏—Å—Ç–∞–¥ –≤–∞ –Ω–∞—Ç–∏“∑–∞ –º–µ–≥–∏—Ä–∞–¥ ===
def recognize_music(file_path):
    with open(file_path, 'rb') as f:
        resp = requests.post(
            'https://api.audd.io/',
            data={'api_token': AUDD_API_TOKEN, 'return': 'apple_music,spotify,lyrics'},
            files={'file': f}
        )
    data = resp.json()
    if data.get("status") != "success" or not data.get("result"):
        return None
    r = data["result"]
    text = f"üéµ <b>{r.get('title','?')}</b> ‚Äî {r.get('artist','?')}"
    if r.get("album"):
        text += f"\nüíø –ê–ª—å–±–æ–º: {r['album']}"
    if r.get("release_date"):
        text += f"\nüìÖ –°–∞–Ω–∞–∏ –Ω–∞—à—Ä: {r['release_date']}"
    if r.get("spotify") and r["spotify"].get("external_urls"):
        text += f"\nüéß Spotify: {r['spotify']['external_urls'].get('spotify')}"
    if r.get("apple_music") and r["apple_music"].get("url"):
        text += f"\nüçé Apple Music: {r['apple_music']['url']}"
    if r.get("lyrics") and r["lyrics"].get("lyrics"):
        lyr = r["lyrics"]["lyrics"][:400]
        text += f"\nüìù Lyrics:\n{lyr}..."
    return text

# === –§–£–ù–ö–°–ò–Ø: –∑–µ—Ä–∫–∞—à–∏–∏ –≤–∏–¥–µ–æ –≤–∞ –≥–∏—Ä–∏—Ñ—Ç–∞–Ω–∏ –∞—É–¥–∏–æ –∞–∑ –ª–∏–Ω–∫ ===
def download_audio_from_url(url):
    tmpdir = tempfile.mkdtemp()
    out_path = os.path.join(tmpdir, "audio.%(ext)s")
    opts = {
        'format': 'bestaudio/best',
        'outtmpl': out_path,
        'quiet': True,
    }
    try:
        with yt_dlp.YoutubeDL(opts) as ydl:
            info = ydl.extract_info(url, download=True)
            filename = ydl.prepare_filename(info)
            # –¢–∞–±–¥–∏–ª –±–∞ WAV
            wav_path = os.path.join(tmpdir, "audio.wav")
            subprocess.run(['ffmpeg', '-y', '-i', filename, '-ar', '44100', '-ac', '1', wav_path],
                           stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
            return wav_path
    except Exception as e:
        print("Error:", e)
        return None

# === “≤–û–õ–ê–¢: –∞–≥–∞—Ä –ø–∞—ë–º –ª–∏–Ω–∫ –±–æ—à–∞–¥ ===
@bot.message_handler(func=lambda msg: 'http' in msg.text)
def handle_link(message):
    url = message.text.strip()
    bot.reply_to(message, "üîé –õ–∏–Ω–∫ —ë—Ñ—Ç —à—É–¥, –∑–µ—Ä–∫–∞—à”£ –≤–∞ —Ç–∞“≥–ª–∏–ª –º–µ—à–∞–≤–∞–¥...")
    audio_file = download_audio_from_url(url)
    if not audio_file:
        bot.send_message(message.chat.id, "‚ùå –ù–∞—Ç–∞–≤–æ–Ω–∏—Å—Ç–∞–º –∞—É–¥–∏–æ—Ä–æ –∞–∑ –∏–Ω –ª–∏–Ω–∫ –≥–∏—Ä–∞–º.")
        return
    result = recognize_music(audio_file)
    if result:
        bot.send_message(message.chat.id, result, parse_mode='HTML')
    else:
        bot.send_message(message.chat.id, "‚ùå –ú—É—Å–∏“õ”£ —ë—Ñ—Ç –Ω–∞—à—É–¥.")

# === “≤–û–õ–ê–¢: –∞–≥–∞—Ä –ø–∞—ë–º–∏ –æ–≤–æ–∑”£ —ë –∞—É–¥–∏–æ –±–æ—à–∞–¥ ===
@bot.message_handler(content_types=['voice', 'audio', 'video_note'])
def handle_voice(message):
    file_info = bot.get_file(message.voice.file_id if message.voice else message.audio.file_id)
    downloaded = bot.download_file(file_info.file_path)
    tmpdir = tempfile.mkdtemp()
    ogg_path = os.path.join(tmpdir, "voice.ogg")
    with open(ogg_path, 'wb') as f:
        f.write(downloaded)

    wav_path = os.path.join(tmpdir, "voice.wav")
    subprocess.run(['ffmpeg', '-y', '-i', ogg_path, '-ar', '44100', '-ac', '1', wav_path],
                   stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)

    bot.reply_to(message, "üéß –®–∏–Ω–æ—Ö—Ç–∏ –º—É—Å–∏“õ”£ –æ“ì–æ–∑ —ë—Ñ—Ç, –ª—É—Ç—Ñ–∞–Ω –∏–Ω—Ç–∏–∑–æ—Ä —à–∞–≤–µ–¥...")
    result = recognize_music(wav_path)
    if result:
        bot.send_message(message.chat.id, result, parse_mode='HTML')
    else:
        bot.send_message(message.chat.id, "‚ùå –ú—É—Å–∏“õ”£ —ë—Ñ—Ç –Ω–∞—à—É–¥.")

# === –ò“∑—Ä–æ–∏ –±–æ—Ç ===
print("‚úÖ –ë–æ—Ç –∫–æ—Ä –º–µ–∫—É–Ω–∞–¥...")
bot.infinity_polling()
