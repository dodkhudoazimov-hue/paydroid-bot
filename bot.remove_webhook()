import telebot
from telebot import types

# üîë TOKEN-–∏ —Ö—É–¥—Ä–æ –≥—É–∑–æ—Ä
TOKEN = "8238563485:AAHNLTZodPeXcl7YfjZqIqY6BpcPuP3QGXs"
bot = telebot.TeleBot(TOKEN)

# üëë ID —ë username-–∏ –∞–¥–º–∏–Ω
ADMIN_USERNAME = "@marz_x5"

# üì¶ –ú–æ–ª“≥–æ
products = {
    1: {"name": "–¢–µ–ª–µ—Ñ–æ–Ω", "price": 1200},
    2: {"name": "–ù–∞—É—à–Ω–∏–∫", "price": 150},
    3: {"name": "–ó–∞—Ä—è–¥–Ω–∏–∫", "price": 50},
}

# üõí –°–∞–±–∞–¥“≥–æ–∏ –∫–æ—Ä–±–∞—Ä–æ–Ω
user_carts = {}
# üì¨ –§–∞—Ä–º–æ–∏—à“≥–æ–∏ –Ω–∞–≤ –±–∞—Ä–æ–∏ –∞–¥–º–∏–Ω
orders = []

# ----------------------------------------------------------
# –§—É–Ω–∫—Å–∏—è“≥–æ–∏ —ë—Ä–∏—Ä–∞—Å–æ–Ω
# ----------------------------------------------------------
def make_main_menu():
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton("üõç –î–∏–¥–∞–Ω–∏ –º–æ–ª“≥–æ", callback_data="show_products"))
    keyboard.add(types.InlineKeyboardButton("üõí –î–∏–¥–∞–Ω–∏ —Å–∞–±–∞–¥", callback_data="view_cart"))
    keyboard.add(types.InlineKeyboardButton("üëë –ë–∞—Ö—à–∏ –∞–¥–º–∏–Ω", callback_data="admin"))
    return keyboard

def make_products_menu():
    keyboard = types.InlineKeyboardMarkup()
    for pid, p in products.items():
        keyboard.add(types.InlineKeyboardButton(f"{p['name']} - {p['price']} —Å–æ–º–æ–Ω”£", callback_data=f"add_{pid}"))
    keyboard.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ë–æ–∑–≥–∞—à—Ç", callback_data="back_main"))
    return keyboard

def make_cart_text(user_id):
    cart = user_carts.get(user_id, [])
    if not cart:
        return "üõí –°–∞–±–∞–¥ —Ö–æ–ª”£ –∞—Å—Ç."
    text = "üì¶ –ú–æ–ª“≥–æ –¥–∞—Ä —Å–∞–±–∞–¥:\n"
    total = 0
    for p in cart:
        text += f"‚Ä¢ {p['name']} - {p['price']} —Å–æ–º–æ–Ω”£\n"
        total += p['price']
    text += f"\nüí∞ “∂–∞–º—ä: {total} —Å–æ–º–æ–Ω”£"
    return text

# ----------------------------------------------------------
# –ö–æ–º–∞–Ω–¥–∞“≥–æ
# ----------------------------------------------------------
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(
        message.chat.id,
        f"–°–∞–ª–æ–º, {message.from_user.first_name}! üëã\n–ò–Ω –º–∞“ì–æ–∑–∞–∏ –æ–Ω–ª–∞–π–Ω –∞—Å—Ç.\n–ú–µ–Ω—é—Ä–æ –∏–Ω—Ç–∏—Ö–æ–± –∫—É–Ω:",
        reply_markup=make_main_menu()
    )

# ----------------------------------------------------------
# Callback Query
# ----------------------------------------------------------
@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    user_id = call.message.chat.id

    # –î–∏–¥–∞–Ω–∏ –º–æ–ª“≥–æ
    if call.data == "show_products":
        bot.edit_message_text(
            "üì¶ –ú–æ–ª“≥–æ–∏ –¥–∞—Å—Ç—Ä–∞—Å:",
            user_id,
            call.message.message_id,
            reply_markup=make_products_menu()
        )

    # –ë–æ–∑–≥–∞—à—Ç –±–∞ –º–µ–Ω—é–∏ –∞—Å–æ—Å”£
    elif call.data == "back_main":
        bot.edit_message_text(
            "–ú–µ–Ω—é–∏ –∞—Å–æ—Å”£:",
            user_id,
            call.message.message_id,
            reply_markup=make_main_menu()
        )

    # –î–∏–¥–∞–Ω–∏ —Å–∞–±–∞–¥
    elif call.data == "view_cart":
        cart_text = make_cart_text(user_id)
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("üõç –•–∞—Ä–∏–¥ –∫–∞—Ä–¥–∞–Ω", callback_data="buy"))
        keyboard.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ë–æ–∑–≥–∞—à—Ç", callback_data="back_main"))
        bot.edit_message_text(cart_text, user_id, call.message.message_id, reply_markup=keyboard)

    # –ò–ª–æ–≤–∞ –±–∞ —Å–∞–±–∞–¥
    elif call.data.startswith("add_"):
        pid = int(call.data.split("_")[1])
        product = products[pid]
        user_carts.setdefault(user_id, []).append(product)
        bot.answer_callback_query(call.id, f"‚úÖ {product['name']} –±–∞ —Å–∞–±–∞–¥ –∏–ª–æ–≤–∞ —à—É–¥!")

    # –•–∞—Ä–∏–¥ –∫–∞—Ä–¥–∞–Ω
    elif call.data == "buy":
        cart = user_carts.get(user_id, [])
        if not cart:
            bot.answer_callback_query(call.id, "üõí –°–∞–±–∞–¥ —Ö–æ–ª”£ –∞—Å—Ç!")
            return

        total = sum([p["price"] for p in cart])
        order_text = f"üßæ –§–∞—Ä–º–æ–∏—à–∏ –Ω–∞–≤ –∞–∑ @{call.from_user.username or call.from_user.first_name}\n\n"
        for p in cart:
            order_text += f"‚Ä¢ {p['name']} - {p['price']} —Å–æ–º–æ–Ω”£\n"
        order_text += f"\nüí∞ “∂–∞–º—ä: {total} —Å–æ–º–æ–Ω”£"
        orders.append(order_text)

        # –¢–æ–∑–∞ –∫–∞—Ä–¥–∞–Ω–∏ —Å–∞–±–∞–¥
        user_carts[user_id] = []

        bot.send_message(user_id, "‚úÖ –§–∞—Ä–º–æ–∏—à–∏ —à—É–º–æ “õ–∞–±—É–ª —à—É–¥! –ê–¥–º–∏–Ω –±–æ —à—É–º–æ —Ç–∞–º–æ—Å –º–µ–≥–∏—Ä–∞–¥.")
        bot.send_message(user_id, f"üëë –ë–∞—Ä–æ–∏ —Ç–∞–º–æ—Å: {ADMIN_USERNAME}")
        bot.send_message(user_id, "‚¨ÖÔ∏è –ë–∞—Ä–≥–∞—à—Ç –±–∞ –º–µ–Ω—é:", reply_markup=make_main_menu())

        # –ë–∞ –∞–¥–º–∏–Ω —Ñ–∞—Ä–º–æ–∏—à —Ñ–∏—Ä–∏—Å—Ç–æ–¥–∞–Ω
        bot.send_message(user_id, "üì® –§–∞—Ä–º–æ–∏—à –±–∞ –∞–¥–º–∏–Ω —Ñ–∏—Ä–∏—Å—Ç–æ–¥–∞ —à—É–¥.")
        bot.send_message(call.message.chat.id, "‚úÖ –§–∞—Ä–º–æ–∏—à —Å–∞–±—Ç —à—É–¥.")
        bot.send_message(user_id, "–ë–æ–∑–≥–∞—à—Ç –±–∞ –º–µ–Ω—é:", reply_markup=make_main_menu())

    # –ë–∞—Ö—à–∏ –∞–¥–º–∏–Ω
    elif call.data == "admin":
        if call.from_user.username == ADMIN_USERNAME.replace("@", ""):
            if not orders:
                bot.edit_message_text("üì≠ –§–∞—Ä–º–æ–∏—à“≥–æ–∏ –Ω–∞–≤ –≤—É“∑—É–¥ –Ω–∞–¥–æ—Ä–∞–Ω–¥.", user_id, call.message.message_id,
                                      reply_markup=make_main_menu())
            else:
                text = "\n\n".join(orders)
                bot.edit_message_text(f"üì¶ –§–∞—Ä–º–æ–∏—à“≥–æ–∏ –Ω–∞–≤:\n\n{text}", user_id, call.message.message_id,
                                      reply_markup=make_main_menu())
        else:
            bot.answer_callback_query(call.id, "üö´ –¢–∞–Ω“≥–æ –∞–¥–º–∏–Ω –¥–∞—Å—Ç—Ä–∞—Å”£ –¥–æ—Ä–∞–¥!")

print("‚úÖ –ë–æ—Ç –∫–æ—Ä –º–µ–∫—É–Ω–∞–¥...")
bot.polling(none_stop=True)
